<?xml version="1.0" encoding="UTF-8"?>
<project name="module_synthpp" default="compile.module.synthpp">
  <dirname property="module.synthpp.basedir" file="${ant.file.module_synthpp}"/>
  
  <property name="module.jdk.home.synthpp" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.synthpp" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.synthpp" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.synthpp" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="synthpp.output.dir" value="${module.synthpp.basedir}/../out/production/synthpp"/>
  <property name="synthpp.testoutput.dir" value="${module.synthpp.basedir}/../out/test/synthpp"/>
  
  <path id="synthpp.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="synthpp.module.production.classpath">
    <path refid="${module.jdk.classpath.synthpp}"/>
    <fileset dir="${basedir}/libs">
      <patternset refid="library.patterns"/>
    </fileset>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-RC2.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-RC1.jar"/>
  </path>
  
  <path id="synthpp.runtime.production.module.classpath">
    <pathelement location="${synthpp.output.dir}"/>
    <fileset dir="${basedir}/libs">
      <patternset refid="library.patterns"/>
    </fileset>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-RC2.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-RC1.jar"/>
  </path>
  
  <path id="synthpp.module.classpath">
    <path refid="${module.jdk.classpath.synthpp}"/>
    <pathelement location="${synthpp.output.dir}"/>
    <fileset dir="${basedir}/libs">
      <patternset refid="library.patterns"/>
    </fileset>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-RC2.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-RC1.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-RC2.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-RC1.jar"/>
  </path>
  
  <path id="synthpp.runtime.module.classpath">
    <pathelement location="${synthpp.testoutput.dir}"/>
    <pathelement location="${synthpp.output.dir}"/>
    <fileset dir="${basedir}/libs">
      <patternset refid="library.patterns"/>
    </fileset>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-RC2.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-RC1.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-RC2.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-RC1.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.synthpp">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.synthpp">
    <patternset refid="excluded.from.module.synthpp"/>
  </patternset>
  
  <path id="synthpp.module.sourcepath">
    <dirset dir="${module.synthpp.basedir}/../../synthpp">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.synthpp" depends="compile.module.synthpp.production,compile.module.synthpp.tests" description="Compile module synthpp"/>
  
  <target name="compile.module.synthpp.production" description="Compile module synthpp; production classes">
    <mkdir dir="${synthpp.output.dir}"/>
    <javac destdir="${synthpp.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.synthpp}/javac">
      <compilerarg line="${compiler.args.synthpp}"/>
      <bootclasspath refid="synthpp.module.bootclasspath"/>
      <classpath refid="synthpp.module.production.classpath"/>
      <src refid="synthpp.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.synthpp"/>
    </javac>
    
    <copy todir="${synthpp.output.dir}">
      <fileset dir="${module.synthpp.basedir}/../src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.synthpp.tests" depends="compile.module.synthpp.production" description="compile module synthpp; test classes" unless="skip.tests"/>
  
  <target name="clean.module.synthpp" description="cleanup module">
    <delete dir="${synthpp.output.dir}"/>
    <delete dir="${synthpp.testoutput.dir}"/>
  </target>
</project>